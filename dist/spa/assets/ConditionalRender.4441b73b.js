const t={inputRenderingTypes:[{label:"\u7D14\u503C\u76F8\u7B49",value:"pureValue"}],checkboxRenderingTypes:[{label:"\u9078\u9805\u5305\u542B",value:"multipleValuesInArray"}]},a={input:t.inputRenderingTypes,radio:t.inputRenderingTypes,toggle:t.inputRenderingTypes,checkbox:t.checkboxRenderingTypes,select:t.inputRenderingTypes},s={pureValue:({cr_trigger:e,newValue:n})=>e===n,multipleValuesInArray:({cr_trigger:e,newValue:n})=>!Array.isArray(e)||!Array.isArray(n)||!e.length||!n.length?!1:e.every(r=>n.includes(r))};function u({objectInCrList:e,newValue:n}){var r;return(r=s[e.cr_type])==null?void 0:r.call(s,{cr_trigger:e.cr_trigger,newValue:n})}function g({CRList:e,renderObject:n,emits:r,newValue:d}){for(const p in e){const i=e[p],o=Number(n.index)+1,c=Number(i.index);r("updateCrObjectToRenderList",{execute:u({objectInCrList:i,newValue:d}),targetIndex:u({objectInCrList:i,newValue:d})?o:c,objectInCrList:i})}}export{a as f,g as u};
